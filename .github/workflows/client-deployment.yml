name: Client CI and Deployment

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          cd client
          npm ci 
          npm run build --if-present
  
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Authenticate to gcloud
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: "Show information about gcloud CLI"
        run: |
          gcloud info
      # Build the Docker image using the IMAGE_NAME environment variable
      - name: Build Docker image
        run: |
          cd client
          echo "Image name: ${{ env.IMAGE_NAME }}"
          docker build -t ${{ env.IMAGE_NAME }} .
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./scripts/git_update.sh -v major
      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet
      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest $GCP_REGION-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $GCP_REGION-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
          docker push $GCP_REGION-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
          docker push $GCP_REGION-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
